name: GitHub Classroom Workflow

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: persons
          POSTGRES_USER: program
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Шаг 1: Клонируем репозиторий
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Шаг 2: Установка Python и зависимостей
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r djangoProject/requirements.txt

      # Шаг 3: Установка Yandex Cloud CLI
      - name: Install Yandex Cloud CLI
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "/home/runner/yandex-cloud/bin" >> $GITHUB_PATH
          echo 'export PATH="$PATH:/home/runner/yandex-cloud/bin"' >> ~/.bashrc
          echo "Yandex Cloud CLI installed."

      # Шаг 4: Make migrations
      - name: Make migrations
        run: |
          . venv/bin/activate
          python djangoProject/myproject/manage.py makemigrations

      # Шаг 5: Применение миграций
      - name: Run migrations
        run: |
          . venv/bin/activate
          python djangoProject/myproject/manage.py migrate

      # Шаг 6: Запуск тестов Django
      - name: Run Django Tests
        run: |
          . venv/bin/activate
          python djangoProject/myproject/manage.py test

      # Шаг 7: Аутентификация в Yandex Cloud
      - name: Authenticate to Yandex Cloud
        run: |
          /home/runner/yandex-cloud/bin/yc iam key create --service-account-name github-actions --output key.json
          /home/runner/yandex-cloud/bin/yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          /home/runner/yandex-cloud/bin/yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          /home/runner/yandex-cloud/bin/yc container registry configure-docker

      # Шаг 8: Сборка Docker-образа приложения
      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGION }}/my-registry/my-app:${{ github.sha }} .

      # Шаг 9: Сборка Docker-образа для PostgreSQL
      - name: Build PostgreSQL Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGION }}/my-registry/postgres:${{ github.sha }} -f docker/postgres/Dockerfile .

      # Шаг 10: Публикация образов в Yandex Container Registry
      - name: Push Docker images
        run: |
          docker push cr.yandex/${{ secrets.YC_REGION }}/my-registry/my-app:${{ github.sha }}
          docker push cr.yandex/${{ secrets.YC_REGION }}/my-registry/postgres:${{ github.sha }}

      # Шаг 11: Деплой приложения и базы данных на Yandex Cloud
      - name: Deploy to Yandex Cloud
        run: |
          yc compute instance create-with-container \
            --name my-app-instance \
            --cores=2 \
            --memory=4 \
            --core-fraction=100 \
            --container-image=cr.yandex/${{ secrets.YC_REGION }}/my-registry/my-app:${{ github.sha }} \
            --public-ip \
            --zone ru-central1-a

          yc compute instance create-with-container \
            --name postgres-instance \
            --cores=2 \
            --memory=4 \
            --core-fraction=100 \
            --container-image=cr.yandex/${{ secrets.YC_REGION }}/my-registry/postgres:${{ github.sha }} \
            --public-ip \
            --zone ru-central1-a

      # Шаг 12: Запуск тестов API через Postman
      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          environment: postman/[inst] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      # Шаг 13: Автогрейдинг
      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{ secrets.GOOGLE_API_KEY }}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 1
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"
